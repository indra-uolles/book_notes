---
layout: post
title:  "Tanenbaum Networks - Introduction"
date:   2024-09-10 19:29:05 +0100
categories: webdev
---

#### Client-server model 

Two processes (i.e. running programs) are involved, one on the client machine and one on the server machine. Communication takes the form of the client process sending a message over the network to the server process. The client process then waits for a reply message. When the server process gets a request, it performs the requested work or looks up the requested data and sends a reply. 

#### Broadcast links vs Point-to-point links

Two types of transmission technology in widespread use: broadcast links and point-to-point links. Point-to-point links connect individual pairs of machines. 

To go from the source to the destination on a network made up of point-to-point links, short messages, called packets, in certain contexts, may first have to visit one or more intermediate machines. Often multiple routes of different lengths are possible so finding good ones is important in point-to-point network. Point-to-point transmission with exactly one sender and exactly one receiver is sometimes called unicasting.

On a broadcast network the communication channel is shared by al the machines in the network; packets sent by any machine are received by all the others. An address field within each packet specifies the intended recipient. Upon receiving a packet, a machine checks the address field. If the packet is intended for the receiving machine, that machine processes the packet; if the packet is intended for some other machine, it’s just ignored. 

A wireless network is a common example of a broadcast link, with communication shared over a coverage region that depends on the wireless channel and the transmitting machine. As an analogy, consider someone standing in a meeting room and shouting “Watson come here”. Although he will be heard by many people only Watson will respond.

Broadcast systems usually also allow the possibility of addressing a packet to all destinations by using a special code in the address field. When a packet with this code is transmitted, it is received and processed by every machine on the network. This mode of operation is called broadcasting. Some broadcast systems also support transmission to a subset of the machines, which is known as multicasting.

#### Types of networks (PAN, LAN, MAN, WAN) and Internet definition

PAN (personal area networks) let devices communicate over the range of a person. Computer with attached monitor, mouse, keyboard, printer by Bluetooth. 

LAN (local area networks) privately owned network that operates within or nearby a single building like a home, office or factory. LANs are widely used to connect computers and shared printers and exchange information. In most cases, each computer talks to a device in the ceiling (wireless router or access point). It relays packets between the computers and also between them and the Internet. Being the AP is like being a popular kid at school because everyone wants to talk to you.
Standard for wireless LANs is called IEEE 802.11 popularly known as WiFi. The topology of many wired LANs is built from point-to-point links. IEEE 802.3 popularly called Ethernet is the most common type of wired LAN.

MAN (metropolitan area network) covers a city. The best known examples are cable television networks available in many cities. 

WAN (wide area network) spans a large geographical area, often a country or continent. In most WANs hosts are connected by transmission lines and switching elements. Transmission lines move bits between machines. They can be made of copper wire, optical fiber or radio links. Most companies lease the lines from a telecommunications company. Switching elements (switches) are specialised computers that connect two or more transmission lines. When data arrives on an incoming line, the switching element must choose an outgoing line on which to forward them. 
Unlike LAN, the routers here will usually connect different kinds of networking technology. The networks inside the offices may be switched Ethernet, while the long-distance transmission lines may be SONET links. Many WANs may be composite networks that are made up of more than one network. Rather than lease dedicated transmission lines, a company might connect its offices to the internet. It allows the connections to be made between the offices as virtual links that use the underlying capacity of the Internet. This arrangement is called VPN. The subnet may be run by a different company (internet service provider). The subnet operator will connect to other customers too, as long as they can pay and it can provide service. The subnet operator will also connect to other networks that are part of the internet. 
WANs can be satellite systems where each computer on the ground has an antenna through which it can send data to and receive data from to a satellite in orbit. All computers can hear the output from the satellite, and in some cases they can also hear the upward transmissions of their fellow computers to the satellite as well. Satellite networks are inherently broadcast.
The cellular telephone network is another example of a WAN that uses wireless technology. Each cellular base station covers a distance with a range measured in kilometres. The base stations are connected to each other by a backbone network that is usually wired. 

A collection of interconnected networks is called an internet. The internet uses ISP networks to connect enterprise networks, home networks and many other networks. When two networks are interconnected? Different organisations have paid to construct different parts of the network and each maintains its part. The underlying technology may be different in different parts (e.g. broadcast vs point-to-point and wired va wireless). Gateway is a machine that makes a connection between two or more networks and provides the necessary translation in terms of hardware and software. Gateways are dist inguished by the layer at which they operate in the protocol hierarchy.

#### Network models - general

**Connection-oriented service vs Connectionless service**

Layers can offer two different types of service to the layers above them: connection-oriented and connectionless. Connection-oriented service is modelled after the telephone system. To talk to someone, you pick up the phone, dial the number, talk, and then hang up. Similarly, to use a connection-oriented network service, the service user first establishes a connection, uses the connection, and then releases the connection. The connection acts like a tube: the sender pushes objects (bits) in at one end, and the receiver takes them out at the other end. In most cases the order is preserved so that the bits arrive in the order they were sent. In some cases, when a connection is established, the sender, receiver and subnet conduct a negotiation about the parameters to be used, such as maximum message size, quality of service required etc. Typically one side makes a proposal and the other side can accept it, reject it, or make a counter proposal. 

Connectionless service is modeled after the postal system. Each message (letter) carries the full destination address, and each one is routed through the intermediate nodes inside the system independent of all the subsequent messages. There are different names for messages in different contexts, a packet is a message at the network layer. It is possible that the first message sent can be delayed so that the second one arrives first. Some services are reliable - they never lose data. Usually, a reliable service is implemented by having the receiver a knowledge the receipt of each message so the sender is sure that it arrived. The acknowledgement process introduces overhead and delays, which are sometimes undesirable.

**Service definition and an example of connection-oriented service**

A service is specified by a set of operations available to user processes. If the protocol stack is located in the operating system, as it often is, the primitives are normally system calls. These calls cause a trap to kernel mode, which then turns control of the machine over to the operating system to send the necessary packets. 

An example of connection-oriented service. First, the server executes LISTEN to indicate that it’s prepared to accept incoming connections. A common way to implement listen is to make it a blocking system call. After executing this operation, the server process is blocked until a request for connection appears. Next, the client process executes CONNECT to establish the connection with the server. Next, the client process executes CONNECT to establish a connection with the server. The CONNECT call needs to specify who to connect to, so it might have a parameter giving the server’s address. The operating system then typically sends a packet to the peer asking it to connect, the client process is suspended until there is a response. When the packet arrives at the server, the operating system sees that the packet is requesting a connection. It checks to see if there is a listener and if so it unblocks the listener. The server process can then establish the connection with the ACCEPT call. This sends a response back to the client process to accept the connection. The arrival of this response then releases the client. At this point the client and the server are both running and they have a connection established. Analogy from real life - a customer calling a company customer service manager. At the start of the day, the service manager sits next to his telephone in case it rings. Later, a client places a call. When the manager picks up the phone, the connection is established. Next, the server executes RECEIVE to prepare to accept the first request. Normally, the server does this immediately upon being released from the LISTEN, before the acknowledgement can get back to the client. The RECEIVE call blocks the server. Then the client executes SEND to transmit its request followed by the execution of RECEIVE to get the reply. The arrival of the request packet at the server machine unblocks the server so it can handle the request. After it has done the work, the server uses SEND to return the answer to the client. The arrival of this packet unblocks the client, which can now inspect the answer. If the client has additional requests, it can make them now. Six packets are required to complete this protocol, why not use a connection less protocol instead. In the face of large messages on either direction, transmission errors and lost packets, a simple request-reply protocol over an unreliable network is not adequate.

A service is a set of operations that a layer provides to the layer above it. A service relates to an interface between two layers, with the lower layer being the service provider and the upper layer being the service user. A protocol is a set of rules governing the format and meaning of the packets, or messages that are exchanged by the peer entities within a layer. Entities use protocols to implement their service definitions. They are free to change their protocols, provided they do not change the service visible to their users.

**Layers**

The entities comprising the corresponding layers on different machines are called peers. The peers may be software processes, hardware devices or even human beings. Each layer passes data and and control information to the layer immediately below it, until the lowest level is reached. Layer 1 is the physical medium through which communication occurs. The lower levels are frequently implemented in hardware or firmware. Different hosts use different implementations of the same protocol (often written by different companies). The protocol itself can change in some layer without the layers above and below it even noticing. 

Design issues for the layers. Reliability is the design issue of making a network that operates correctly even though it is made up of a collection of components that are themselves unreliable. There is a chance that some bits of a packet travelling through the network will be received damaged (inverted) due to random wireless signals, hardware flaws, software bugs etc. One mechanism for finding errors in received information uses codes for error detection. Information that is incorrectly received can then be retransmitted until it is received correctly. More powerful codes allow for error correction, where the correct message is recovered from the possible incorrect bits that were originally received. Both of these mechanisms work by adding redundant information. They are used at low layers, to protect packets sent over individual links, and high layers, to check that the right contents were received. Another reliability issue is finding a working path through a network. Often there are multiple paths between a source and destination, and in a large network, there may be some links or routers that are broken. Suppose that the network is down in Germany. Packets sent from London to Rome via Germany won’t get through, but we could instead send packets from London to Rome via Paris. The network should automatically make this decision. This topic is called routing. Every layer needs a mechanism for identifying the senders and receivers that are involved in a particular message. This mechanism is called addressing or naming, in the low and high layers respectively.

#### ISO OSI (Open Systems Interconnection) 

**The Physical Layer**

Transmitting raw bits over a communication channel. We should make sure that when one side sends a 1 bit it is received by the other side as a 1 bit, not as a 0 bit. Typical questions here are what electrical signals should be used to represent a 1 and a 0, how many nanoseconds a bit lasts, whether transmission may proceed simultaneously in both directions, how initial connection is established, how it is torn down when both sides are finished, how many pins the network connector has and what each pin is used for. 

**The Data Link Layer**

Transforms a raw transmission facility into a line that appears free of undetected transmission errors. It has the sender to break up the input data into data frames (typically a few hundred or a few thousand bytes) and transmit the frames sequentially. If the service is reliable, the receiver confirms the correct receipt of each frame by sending back an acknowledgement frame.

Another issues here and most of the higher layers as well: how to keep a fast transmitter from drowning a slow receiver in data. Some traffic regulation mechanism may be needed to let the transmitter know when the receiver can accept more data. 

Broadcast networks have an additional issue in this layer: how to control access to the shared channel. A special sublayer of the data link layer, the medium access control sublayer, deals with this problem. 

**The Network Layer**

Determines how packets are routed from source to destination. Routes can be based on static tables that are “wired into” the network and rarely changed or more often they can be updated automatically to avoid failed components. They can also be determined at the start of each conversation, for example, a terminal session, such as a login to the remote machine. Finally, they can be highly dynamic, being determined anew for each packet to reflect the current network load. 

If too many packets are present in the subnet at the same time, they will get in one another’s way, forming bottlenecks. Handling congestion is also a responsibility of the network layer, in conjunction with higher layers that adapt the load they place on the network. The quality of service provided (delay, transit time, jitter) is also a network layer issue. 

When a packet has to travel from one network to another to get to its destination,many problems can arise. The addressing used by second network can be different from that used by the first one. The second one may not accept the packet at all because it’s too large. The protocols may differ and so on. It’s up to the network layer to overcome these problems to allow heterogenous networks to be interconnected. 

In broadcast networks, the routing problem is simple so the network layer is often thin or even nonexistent. 

**The Transport Layer**

Transport layer accepts data from above it, splits it up into smaller units if need be, passes these to the network layer and ensures that all the pieces arrive correctly at the other end. All this must be done efficiently and in a way that isolates the upper layers from the inevitable changes in the hardware technology over the course of time. 

The transport layer also determines what type of service to provide to the session layer and to the users of the network. The most popular type of transport connection is an error-free point-to-point channel that delivers messages or bytes in the order in which they were sent. However, other possible kinds of transport service exist, such as the transporting of isolated messages with no guarantee about the order of delivery, and the broadcasting of messages to multiple destinations. The type of service is determined when the connection is established. By error-free channel people mean the error rate is low enough to ignore errors. The transport layer is a true end-to-end layer, it carries data all the way from the source to the destination. In other words, a program on the source machine carries on a conversation with a similar program on the destination machine, using the message headers and control messages. In the lower layers, each protocol is between a machine and its immediate neighbours, and not between the ultimate source and destination machines, which may be separated by many routers. 

**The Session Layer**

Allows users on different machines to establish sessions between them. Sessions offer various services, including dialog control (keeping track of whose turn it is to transmit), token management (preventing two parties from attempting the same critical operation simultaneously) and synchronization (check pointing long transmissions to allow them to pick up from where they left off on the event of a crash and subsequent recovery)

**The Presentation Layer**

Unlike the lower layers, which are mostly concerned with moving bits around, it is concerned with the syntax and semantics of the information transmitted. In order to make it possible for computers with different internal data representations to communicate, the data structures to be exchanged can be defined in an abstract way, along with a standard encoding to be used “on the wire”. The presentation layer manages these abstract data structures and allows higher level data structures (e.g. banking records) to be defined and exchanged. 

**The Application Layer**

It contains a variety of protocols, one widely used is HTTP (Hypertext Transfer Protocol). When a browser wants a web page, it sends the name of the page it wants to the server hosting the page using HTTP. The server then sends the page back. Other application protocols are used for file transfer, electronic mail, and network news.

#### History of internet

The grandparent of all WAN is ARPANET. It was a research network sponsored by the US Department of Defense. It connected hundreds of universities and government institutions, using leased telephone lines. When satellite and radio networks were added later, the existing protocols had trouble interworking with them, so a new reference architecture was needed. This architecture later became known as the TCP/IP reference model, named after its two primary protocols. Given the DOD worry that some of its precious hosts, routers and gateways might get blown to pieces at a moments notice by an attack from the Soviet Union, another major goal was that the network able to survive loss of subnet hardware, without existing conversations being broken off. The DOD wanted  connections to remain intact as long as the source and destination machines were functioning, even if some of the machines or transmission lines in between were suddenly put out of operation. 

#### The TCP/IP model

![TCP/IP reference model]({{ site.baseurl }}/assets/TCP_IP_Model.jpg)

**The Link Layer**

All these requirements led to the choice of a packet-switching network based on a connection less layer that runs across different networks. The link layer describes what links such as serial lines and classic Ethernet must do to meet the needs of this connection less internet layer. It’s not really a layer, but rather an interface between hosts and transmission links. 

**The Internet Layer**

Its job is to permit hosts to inject packets into any network and have them travel independently to the destination (potentially on a different network). They may even arrive in a completely different order than they were sent, in which case it’s the job of higher layers to rearrange them, if in-order delivery is desired. 

The analogy here is with the mail system. A person can drop a sequence of international letters into a mailbox in one country and with a little luck, most of them will be delivered to the correct address in the destination country. The letters will probably travel through one or more international mail gateways along the way, but this is transparent to the users. Each country (each network) has its own stamps, preferred envelope sizes, delivery rules is hidden from the users. 

The internet layer defines an official packet format and protocol called IP (internet protocol) plus a companion protocol called ICMP (internet control message protocol) that helps it function. The job of the internet layer is to deliver IP packets where they are supposed to go. Packet routing is clearly a major issue here, as is congestion (though IP has not proven effective at avoiding congestion).

**The Transport Layer** 

It is designed to allow peer entities on the source and destination hosts to carry on a conversation. Two end-to-end transport protocols have been defined here. TCP (Transmission Control Protocol) is a reliable connection-oriented protocol that allows a byte stream originating on one machine to be delivered without error on any other machine in the internet. It segments the incoming byte stream into discrete messages and passes each one on to the internet layer. At the destination, the receiving TCP process reassembles the received messages into the output stream. TCP also handles flow control to make sure a fast sender cannot swamp a slow receiver with more messages that it can handle. 

The second protocol in this layer, UDP (User Datagram protocol) is an unreliable, connection less protocol for applications that don’t want TCP sequencing or flow control and wish to provide their own

**The Application Layer**

The TCP/IP model doesn’t have session or presentation layers. Instead, applications simply include any session and presentation functions that they require. 

![TCP/IP model with protocols]({{ site.baseurl }}/assets/TCP_IP_Model_Protocols.jpg)

DNS (Domain Map System) maps host names onto their network addresses, HTTP the protocol for fetching pages on the World Wide Web, RTP the protocol for delivering real time media such as voice or movies.

**OSI vs TCP/IP**

Both are based on the concept of a stack of independent protocols. The OSI model has 7 layers and TCP/IP has 4. Both have internet work, transport and application layers but the other layers are different. The OSI model was devised before the corresponding protocols were invented. The model was not biased toward one particular set of protocols. Pros: its quite general. Cons: The designers didn’t have experience and good idea what functionality to put in each layer. E.g. the data link layer originally dealt only with point-to-point networks. When broadcast networks came around, a new sublayer had to be hacked into the model. E.g. the committee originally expected that each country would have one network, run by the government and using the OSI protocols, so no thought was given to internetworking. The TCP/IP model is not general, it’s not useful for describing other, non TCP/IP protocol stacks. Trying to use it to explain Bluetooth is not possible. The OSI model supports both connection less and connection-oriented communication in the network layer, but only connection-oriented communication in the transport layer. The TCP/IP model supports only one mode in the network layer (connection less) but both in the transport layer, giving the users a choice. 

#### Internet & ISP

The internet is a vast collection of different networks that use certain common protocols and provide certain common services. To join the internet, the computer is connected to an Internet Service Provider, from whom the user purchases internet access or connectivity. A common way to connect to an ISP is to use the phone line to your house, in which case your phone company is your ISP. DSL (digital subscriber line) reuses the telephone line that that connects to your house for digital data transmission. The computer connected to a device called a DSL modem that converts between digital packets and analog signals. At the other end, a device called DSLAM (digital subscriber line access multiplexer) converts between signals and packets. Another method is to send signals over the cable TV system. Like DSL, it’s a way to reuse existing infrastructure, in this case unused cable TV channels. The device at home end is called a cable modem and the device at cable headend is called the CMTS (Cable Modem Termination System). Another way - running optical fiber to residences. Wireless is used for internet access too. We call the location at which customer packets enter the ISP network for service POP (point of presence). An ISP network is made of long-distance transmission lines that interconnect routers at POPs in the different cities that the ISPs serve. This equipment is called the backbone of the ISP. From the ISP, the system is fully digital and packet switched. ISP networks may be regional, national or international. If a packet is a destined for a host server directly by the ISP, that packet is routed over the backbone and delivered to the host. Otherwise, it must be handed over to another ISP. ISP connect their networks to exchange traffic at IXPs (internet exchange points). There are many IXPs in cities around the world. Basically, an IXP is a room full of routers, at least one per ISP. A LAN in the room connects all the routers, so packets can be forwarded from any ISP backbone to any other ISP backbone. IXPs can be large and independently owned facilities. One of the largest is the Amsterdam Internet Exchange, to which hundreds of ISPs connect. ISPs can have different relationships. A small ISP might pay a larger ISP for internet connectivity to reach distant hosts, in this case, the small ISP is said to pay for transit. Alternatively, two large ISPs might decide to exchange traffic so that each ISP can deliver some traffic to the other ISP without having to pay for transit. One of the many paradoxes of the internet is that ISPs who publicly compete with one another for customers often privately cooperate to do peering. The path a packet takes through the internet depends on the peering choices of the ISPs. If the ISP delivering a packet peers with the destination ISP, it might deliver a packet directly to its peer. Otherwise, it might route the packet to the nearest place at which it connects to a paid transit provider so that provider can deliver a packet. Often, the path a packet takes will not be the shortest path through the internet. At the top of the food chain are a small handful of companies like AT&T that operate large international backbone networks with thousands of routers connected by high bandwidth fibre optic links. These ISPs don’t pay for transit. They form the backbone of the internet, everyone else must connect to them to be able to reach the entire Internet. Companies that provide lots of content, such as Google, locate their computers in data centers that are well connected to the rest of the internet. These data centres are designed for computers, not humans, and may be filled with rack upon rack of machines called a server farm. Colocation or hosting data centres let customers put equipment such as servers at ISP POPs so that short, fast connections can be made between the servers and the ISP backbones. It is now common to rent a virtual machine that is run on a server farm instead of installing a physical computer. These data centres are so large (tens or hundreds of thousands machines) that electricity is a major cost, so data centres are sometimes built in areas where electricity is cheap.

It used to be that a machine was on the internet if it 1) ran the TCP/IP protocol stack 2) had an IP address 3) could send IP packets to all the other machines on the internet. However, ISPs often reuse IP addresses depending on which computers are in use at the moment, and home networks often share one IP address between multiple computers. Security measures like firewalls can partly block computers from receiving packets. Despite these difficulties, it makes sense to regard such machines as being on the internet while they are connected to their ISPs. Some companies have interconnected all their existing internal networks often using the same technology as the internet. These intranets are typically accessible only on company premises. 

#### 3G mobile phone networks

First generation mobile phone systems transmitted voice calls as continuously varying (analog) signals. Second generation mobile phone systems switched to transmitting voice calls in digital forms to increase capacity, improve security and offer text messaging. The third generation (3G) systems offer both digital voice and broadband digital data services. The scarce resource in mobile phone systems is radio spectrum. Governments license the right to use parts of the spectrum to the mobile phone network operators, often using a spectrum auction in which network operators submit bids. Having a piece of licensed spectrum makes it easier to design and operate systems, since no one else is allowed transmit on that spectrum,but it often costs a serious amount of money. It’s the scarcity of spectrum that led to the cellular network design that is now used for mobile phone networks. To manage the radio interference between users, the coverage area is divided into cells. Within a cell, users are assigned channels that do not interfere with each other and do not cause too much interference for adjacent cells. This allows for good reuse of the spectrum, or frequency reuse in the neighboring cells, which increases the capacity of the network. Modern 3G systems allow each cell to use all frequencies, but in a way that results in a tolerable level of interference to the neighbouring cells. Mobile phone network has several parts. First, there is the air interface. This term is a fancy name for the radio communication protocol that is used over the air between the mobile device and the cellular base station. The UMTS air interface is based on code division multiple access (CDMA). The cellular base station together with its controller forms the radio access network. This part is the wireless side of the mobile phone network. Radio network controller controls how the spectrum is used. The base station implements the air interface. The rest of the mobile phone network carries the traffic for the radio access network. It’s called the core network. The UMTS core network evolved from the core network used for the 2G GSM system that came before it. However, something surprising is happening in the UMTS core network. Since the beginning of networking, a war has been going on between the people who support packet networks (I.e. connectionless subnets) and the people who support circuit networks (I.e. connection-oriented subnets). The main proponents of packets come from the internet community. In a connectionless design, every packet is routed independently of every other packet. As a consequence, if some routers go down during a session, no harm will be done as long as the system can dynamically reconfigure itself so that subsequent packets can find some route to the destination, even if it’s different from that which previous packets used. The circuit camp comes from the world of telephone companies. In the telephone system, a caller must dial the called party’s number and wait for a connection before talking or sending data. This connection setup establishes a route through the telephone system that is maintained until the call is terminated. All words or packets follow the same route. If a line or switch on the path goes down, the call is aborted, making it less fault tolerant than a connectionless design. The advantage of circuits is that they can support quality of service more easily. By setting up a connection in advance, the subnet can reserve the resources such as link bandwidth, switch buffer space and CPU. If an attempt is made to set up a call and insufficient resources are available, the call is rejected and the caller gets a kind of busy signal. In this way,once a connection has been set up, the connection will get good service. With a connectionless network, if too many packets arrive at the same router at the same moment, the router will choke and probably lose packets. The sender will eventually notice this and resend them, but the quality of service will be jerky and unsuitable for audio or video unless the network is lightly loaded. There is both packet and circuit switched equipment in the core network. 

![Architecture of the UMTS 3G mobile phone network]({{ site.baseurl }}/assets/UMTS_3G.jpg)

Older mobile phone networks used a circuit-switched core in the style of the traditional phone network to carry voice calls. Data services have become a much more important part of the mobile phone network than they used to be, starting with text messaging and early packet data services such as GPRS (general packet radio service) in the GSM system. These older data services ran at tens of kbps, but users wanted more. Newer mobile phone networks carry packet data at rates of multiple mbps. For comparison, a voice call is carried at a rate of 64kbps. To carry all this data, the UMTS core network nodes connect directly to a packet-switched network. The SGSN (serving GPRS support node) and the GGSN (Gateway GPRS Support Node) deliver data packets to and from mobiles and interface to external packet networks such as the Internet. This transition is set to continue in the mobile phone networks that are now being planned and deployed. Internet protocols are even used on mobiles to set up connections for voice calls over a packet data network, in the manner of voice-over-IP. IP and packets are used all the way from the radio access through to the core network. 

When the user moves out of the range of the cellular base station and into the range of another one, the flow of data must be re-routed from the old to the new cell base station. This technique is known as handover or handoff. Either the mobile device or the base station may request a handover when the quality of the signal drops. In some cell networks it is possible to connect to the new base station before disconnecting from the old base station. This improves the connection quality for the mobile because there is no break in service; the mobile is actually connected to two base stations for a short while. 

Each mobile network has a HSS (Home Subscriber Server) in the core network that knows the location of each subscriber, as well as other profile information that is used for authentication and authorization. This way, each mobile can be found by contacting the HSS.

SIM card (Subscriber Identity Module) contains the subscriber’s identity and account information. Information on SIM cards is also used by the mobile phone network to authenticate subscribers and check that they are allowed to use the network. With UMTS, the mobile also uses the information on the SIM card to check that it is talking to a legitimate network. Wireless signals are broadcast to all neatby receivers, so to make it difficult to eavesdrop on conversations, cryptographic keys on the SIM card are used to encrypt transmissions.
